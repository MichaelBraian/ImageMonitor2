rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isDentistForPatient(patientId) {
      return isAuthenticated() &&
        exists(/databases/$(database)/documents/patients/$(patientId)) &&
        get(/databases/$(database)/documents/patients/$(patientId)).data.dentistId == request.auth.uid;
    }
    
    // Files collection
    match /files/{fileId} {
      allow read: if isAuthenticated() && (
        resource.data.dentistId == request.auth.uid ||
        isDentistForPatient(resource.data.patientId) ||
        isUserAdmin()
      );
      
      allow create: if isAuthenticated() && (
        request.resource.data.dentistId == request.auth.uid ||
        isUserAdmin()
      );
      
      allow update: if isAuthenticated() && (
        resource.data.dentistId == request.auth.uid ||
        isUserAdmin()
      );
      
      allow delete: if isAuthenticated() && (
        resource.data.dentistId == request.auth.uid ||
        isUserAdmin()
      );
    }
    
    // Patients collection
    match /patients/{patientId} {
      allow read: if isAuthenticated() && (
        resource.data.dentistId == request.auth.uid ||
        isUserAdmin()
      );
      
      allow create: if isAuthenticated() && (
        request.resource.data.dentistId == request.auth.uid ||
        isUserAdmin()
      );
      
      allow update, delete: if isAuthenticated() && (
        resource.data.dentistId == request.auth.uid ||
        isUserAdmin()
      );
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == userId ||
        isUserAdmin()
      );
      
      allow write: if isAuthenticated() && (
        request.auth.uid == userId ||
        isUserAdmin()
      );
    }

    // Settings collection
    match /settings/{docId} {
      allow read: if isAuthenticated();
      allow write: if isUserAdmin();
    }
  }
}